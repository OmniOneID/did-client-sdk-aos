name: Build and Upload JAR to GitHub Releases

on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  build:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/QA-') # release/QA-* 브랜치에서만 실행
    runs-on: ubuntu-latest

    steps:
    # 소스 코드를 체크아웃합니다.
    - name: Checkout code
      uses: actions/checkout@v3

    # JDK 17을 설정합니다.
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # Gradle을 사용하여 JAR 파일을 빌드합니다.
    - name: Build JAR
      run: |
        cd source/did-client-sdk-aos
        ./gradlew assemble
        echo "JAR file generated at:"
        find . -name "classes.jar"

    # Pull Request의 모든 커밋 메시지를 가져와 릴리스 노트로 사용합니다.
    - name: Get commit messages for release notes
      id: commit_messages
      run: |
        git log $(git merge-base origin/main HEAD)..HEAD --pretty=format:"%h %s" > commit_messages.txt
        echo "::set-output name=commit_messages::$(cat commit_messages.txt)"

    # GitHub Release를 생성합니다.
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "${{ github.event.pull_request.head.ref }}" # 브랜치 이름으로 태그 생성 (예: release/QA-V1.0.0 -> V1.0.0으로 자동 변환)
        release_name: "${{ github.event.pull_request.head.ref }}" # 브랜치 이름으로 릴리스 이름 생성
        body: |
          This is the release description.
          Commits:
          ${{ steps.commit_messages.outputs.commit_messages }}
        draft: false
        prerelease: false

    # 각 JAR 파일을 업로드합니다.
    - name: Upload JAR from did-datamodel-sdk-aos
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: source/did-client-sdk-aos/did-datamodel-sdk-aos/build/intermediates/aar_main_jar/release/classes.jar
        asset_name: did-datamodel-sdk-aos-${{ steps.create_release.outputs.tag_name }}.jar
        asset_content_type: application/java-archive

    - name: Upload JAR from did-core-sdk-aos
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: source/did-client-sdk-aos/did-core-sdk-aos/build/intermediates/aar_main_jar/release/classes.jar
        asset_name: did-core-sdk-aos-${{ steps.create_release.outputs.tag_name }}.jar
        asset_content_type: application/java-archive

    - name: Upload JAR from did-utility-sdk-aos
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: source/did-client-sdk-aos/did-utility-sdk-aos/build/intermediates/aar_main_jar/release/classes.jar
        asset_name: did-utility-sdk-aos-${{ steps.create_release.outputs.tag_name }}.jar
        asset_content_type: application/java-archive
